@import "../../abstracts/variables";
@import "../../base/animations";

/****** HERO ******/

.header {
  /* a gradient, starting from left and diagonally to 'right bottom' -- it's placed over a background image  */
  background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../../../assets/img/hero.jpg);

  /* prevents 'cropping' the image when resizing window */
  background-position: top;

  /* occupies 95% of the vertical height */
  height: 95vh;

  /* adjust background image on resize (otherwise it becomes cropped) */
  background-size: cover;

  /* clip the image diagonally to 'remove' the right-bottom piece -- coordinates top-left, top-right,  */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  /* makes the header container the reference for absolute positioned elements within (e.g. 'logo-box') */
  position: relative;

  /****** LOGO ******/

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  /****** MAIN TEXT BOX ******/

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    text-align: center;

    /* after positioning the element we use the translate the element itself */
    transform: translate(-50%, -50%);
  }
}

/****** MAIN TEXT BOX CONTENTS ******/

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  margin-bottom: 6rem;

  /* ensures that animation will present no 'glitches' */
  backface-visibility: hidden;

  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    /* uses animation 'moveInLeft' declared below */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;

    /* uses animation 'moveInRight' declared below ('condensed' syntax) */
    animation: moveInRight 1s ease-out;
  }
}

/****** MAIN ACTION BUTTON ******/

.btn--white {
  &:link,
  &:visited {
    text-transform: uppercase;
    background-color: $color-white;
    color: $color-gray;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    font-size: $default-font-size;

    /* allows the use of 'transform' property */
    display: inline-block;

    /* all properties will be applied in a transition of .2s */
    transition: all .2s;

    /* makes this a reference to absolute positioning the ::after pseudo element */
    position: relative;

    /* buttom animated from bottom with delay of .75s */
    animation: moveInBottom .5s ease-out .75s;

    /* applies the '0%' styles from 'moveInBottom' when the element is first loaded */
    animation-fill-mode: backwards;
  }

  /* adds an pseudo-element behind the button */
  &::after {
    /* mandatory property for 'after' pseudo-element */
    content: "";

    /* size */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    background-color: $color-white;

    /* relative to the button */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    /* controls the speed of the hover effects declared below */
    transition: all .4s;
  }

  &:hover {
    transform: translateY(-3px);

    /* no shadow in the x axis, 10px down and 20px blur -- the shadow is a transparent black */
    box-shadow: 0 1rem 2rem rgba($color-black,.2);

    /* whenever the pseudo-element is hovered then it grows and disappears (explosion) -- the transition of .4s is defined in ::after */
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black,.2);
  }
}

