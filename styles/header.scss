/****** HERO ******/
.header {
  /* a gradient, starting from left and diagonally to 'right bottom' -- it's placed over a background image  */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(39, 179, 133, 0.8)), url(../assets/img/hero.jpg);

  /* prevents 'cropping' the image when resizing window */
  background-position: top;

  /* occupies 95% of the vertical height */
  height: 95vh;

  /* adjust background image on resize (otherwise it becomes cropped) */
  background-size: cover;

  /* clip the image diagonally to 'remove' the right-bottom piece -- coordinates top-left, top-right,  */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  /* makes the header container the reference for absolute positioned elements within (e.g. 'logo-box') */
  position: relative;
}

/****** LOGO ******/
.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

/****** MAIN TITLE ******/
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  text-align: center;

  /* after positioning the element we use the translate the element itself */
  transform: translate(-50%, -50%);
}

.heading-primary {
  color: #FFF;
  text-transform: uppercase;
  margin-bottom: 60px;

  /* ensures that animation will present no 'glitches' */
  backface-visibility: hidden;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  /* uses animation 'moveInLeft' declared below */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  /* uses animation 'moveInRight' declared below ('condensed' syntax) */
  animation: moveInRight 1s ease-out;
}

/****** MAIN ACTION BUTTON ******/

.btn-white:link,
.btn-white:visited {
  text-transform: uppercase;
  background-color: #FFF;
  color: #777;
  padding: 15px 40px;
  border-radius: 100px;

  /* allows the use of 'transform' property */
  display: inline-block;

  /* all properties will be applied in a transition of .2s */
  transition: all .2s;

  /* makes this a reference to absolute positioning the ::after pseudo element */
  position: relative;

  /* buttom animated from bottom with delay of .75s */
  animation: moveInBottom .5s ease-out .75s;

  /* applies the '0%' styles from 'moveInBottom' when the element is first loaded */
  animation-fill-mode: backwards;
}

.btn-white:hover {
  transform: translateY(-3px);

  /* no shadow in the x axis, 10px down and 20px blur -- the shadow is a transparent black */
  box-shadow: 0 10px 20px rgba(0,0,0,.2);
}

.btn-white:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

/* adds an pseudo-element behind the button */
.btn-white::after {
  /* mandatory property for 'after' pseudo-element */
  content: "";

  /* size */
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  background-color: #FFF;

  /* relative to the button */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  /* controls the speed of the hover effects declared below */
  transition: all .4s;
}

/* whenever the pseudo-element is hovered then it grows and disappears (explosion) */
.btn-white:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

/****** ANIMATION DEFINITIONS ******/

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translate(-100px);
  }

  80% {
    transform: translate(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translate(100px);
  }

  80% {
    transform: translate(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px)
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

